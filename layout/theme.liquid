<!doctype html>

<html class="no-js" lang="{{ shop.locale }}">
  <head>


    <!-- Cookiebot MUST be the first script in <head>. Switch to auto-blocking. -->
    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="a4aa9c1a-9639-4e9f-8a23-4aef9c37b3cc" data-blockingmode="auto" type="text/javascript"></script>

    <!-- Bridge Cookiebot -> Shopify Customer Privacy API (keeps Shopify cookies off until consent) -->
    <script>
      (function () {
        function setShopifyConsentFromCookiebot() {
          // Load Shopify consent API then map Cookiebot categories â†’ Shopify purposes
          if (!window.Shopify || !window.Shopify.loadFeatures) return;
          window.Shopify.loadFeatures([{ name: 'consent-tracking-api', version: '0.1' }], function (error) {
            if (error || !Shopify.customerPrivacy || !window.Cookiebot) return;
            Shopify.customerPrivacy.setTrackingConsent({
              analytics: !!Cookiebot.consent.statistics,
              marketing: !!Cookiebot.consent.marketing,
              preferences: !!Cookiebot.consent.preferences
            }, function () {});
          });
        }

        // Run once consent state is known, and on every change
        window.addEventListener('CookiebotOnConsentReady', setShopifyConsentFromCookiebot);
        window.addEventListener('CookiebotOnAccept', setShopifyConsentFromCookiebot);
        window.addEventListener('CookiebotOnDecline', setShopifyConsentFromCookiebot);
      })();
    </script>


    <!-- BS: AB Scripts -->
	<link rel="stylesheet" href="{{ 'bs-ab-tlh-010.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'ds-op-lp-3.css' | asset_url }}">

	  <script type="text/plain" data-cookieconsent="marketing" src="{{ 'bs-ab-tlh001.js' | asset_url }}"></script>
	  <script type="text/plain" data-cookieconsent="marketing" src="{{ 'bs-ab-tlh004.js' | asset_url }}"></script>
	  <script type="text/plain" data-cookieconsent="marketing" src="{{ 'bs-ab-tlh-009.js' | asset_url }}"></script>
	  <script type="text/plain" data-cookieconsent="marketing" src="{{ 'bs-ab-tlh-010.js' | asset_url }}"></script>
	  <script type="text/plain" data-cookieconsent="marketing" src="{{ 'bs-ab-tlh-011.js' | asset_url }}"></script>
	  <script type="text/plain" data-cookieconsent="marketing" src="{{ 'bs-ab-tlh-025.js' | asset_url }}"></script>
    <!-- END BS: AB Scripts -->

    <!-- ABlyft DE Visitor Audience Setting -->
    <script type="text/plain" data-cookieconsent="marketing">
      fetch('/browsing_context_suggestions.json')
       .then(response => response.json())
       .then(json => {
        if(json.detected_values.country.handle == "DE") {
       	  window.isDeVisitor = true;
        } else {
       	  window.isDeVisitor = false;
        }
       });
    </script>
    <!-- END ABlyft DE Visitor Audience Setting -->

    <!-- ABlyft Snippet -->
    <script type="text/plain" data-cookieconsent="marketing" src="https://cdn.ablyft.com/s/55886406.js"></script>
    <script type="text/plain" data-cookieconsent="marketing">
      window['ablyft'] = window['ablyft'] || [];
    </script>
    
    <!-- Performance helper: DO NOT touch Cookiebot-gated scripts -->
    <script>
      (function () {
        try {
          var e = navigator,
              t = e.userAgent,
              r = 0,
              a = (el, name, val) => el.setAttribute(name, val),
              o = (el, name) => el.removeAttribute(name),
              TAG = 'tagName';

          if (!(t.indexOf('Linux') > -1 && t.indexOf('Android') === -1 || t.indexOf('X11') > -1 && t.indexOf('Mobile') === -1)) {
            if (e.platform.indexOf('x86_64') > -1 && 0 > t.indexOf('CrOS') || t.indexOf('power') > -1 || t.indexOf('rix') > -1) {
              new MutationObserver((mut) => {
                mut.forEach(({ addedNodes }) => {
                  addedNodes.forEach((node) => {
                    if (node && node.nodeType === 1) {
                      if (node[TAG] === 'IFRAME') {
                        a(node, 'loading', 'lazy');
                        a(node, 'data-src', node.src);
                        o(node, 'src');
                      }
                      if (node[TAG] === 'IMG' && r++ > 20) a(node, 'loading', 'lazy');
                      if (node[TAG] === 'SCRIPT') {
                        // Skip scripts controlled by Cookiebot (so consent logic remains intact)
                        if (node.type === 'text/plain' || node.getAttribute('data-cookieconsent')) return;
                        a(node, 'data-src', node.src);
                        o(node, 'src');
                        node.type = 'text/lazyload';
                      }
                    }
                  });
                });
              }).observe(document.documentElement, { childList: true, subtree: true });

              var q = (sel) => document.querySelector(sel),
                  now = () => Date.now(),
                  start = now(),
                  pump = () => {
                    if (!(now() - start > 500)) {
                      if (!q('body>meta')) return setTimeout(pump, 5);
                      var head = q('head');
                      document.querySelectorAll("meta,link:not([rel='stylesheet']),title").forEach((n) => head.append(n));
                    }
                  };
              pump();
            }
          }
        } catch (m) {}
      })();
    </script>
    
    <!-- TLH-026 custom goal snippet -->
    <script type="text/plain" data-cookieconsent="marketing">
      document.addEventListener('DOMContentLoaded',() => {
          var el = document.querySelector('.Search__Inner');
          if (!el) return;
          el.addEventListener('click',() =>  {
              window['ablyft'].push({
                  eventType: 'custom',
                  eventName: 'tlh-026-clicks-on-searchbar',
                  eventValue: 1 //optional
              });
          });
      });
    </script>
    <!-- END: TLH-026 custom goal snippet -->

    {% render 'replo-head' %}

    <!-- First-party theme scripts (keep as-is; necessary functionality) -->
    <script src="{{ 'bs-load-third-party-scripts.js' | asset_url }}" defer></script>
    <script src="{{ 'bs-subscription-callout.js' | asset_url }}" defer></script>
    <script src="{{ 'bs-sticky-atc.js' | asset_url }}" defer></script>
    <script src="{{ 'bs-mobile-sidebar-nav.js' | asset_url }}" defer></script>

    <!-- Awin Implementation (marketing) -->
    <script type="text/plain" data-cookieconsent="marketing">
      var AWIN = AWIN || {};
      AWIN.Tracking = AWIN.Tracking || {};
      AWIN.Tracking.AdvertiserConsent = false;

      //get Cookie
      let documentCookies = document.cookie;
      let prefix = 'CookieConsent' + '=';
      let begin = documentCookies.indexOf('; ' + prefix);
      let end;

      if (begin == -1) {
      	begin = documentCookies.indexOf(prefix);
      	if (begin != 0) return null;
      } else {
      	begin += 2;
      	end = document.cookie.indexOf(';', begin);
      	if (end == -1) {
      		end = documentCookies.length;
      	}
      }
      const consentCookie = decodeURI(documentCookies.substring(begin + prefix.length, end));
      if (consentCookie.includes('necessary:true') && consentCookie.includes('preferences:true') && consentCookie.includes('statistics:true') && consentCookie.includes('marketing:true')) {
      	AWIN.Tracking.Consent.setAdvertiserConsentStatus(true)
      } else {
      	AWIN.Tracking.Consent.setAdvertiserConsentStatus(false)
      }
    </script>
    <!-- END: Awin Implementation -->

    <script>
      window.SLIDECART_DISABLE = true
    </script>

    <link rel="stylesheet" href="{{ 'slick.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'slick-theme.css' | asset_url }}">
    <script src="{{ 'slick.min.js' | asset_url }}" defer></script>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, maximum=1.0"
    >
    <meta name="theme-color" content="{{ settings.accent_color }}">
    <meta name="google-site-verification" content="QZiR1WxDnZAKrxARkf6DQjhHzK1Y3t4Oo5I1TMO2Sgo">
    <meta name="google-site-verification" content="Yq9dF4MhfrxG4y9GADuu6whPXKYTFZ4vQ3O52SZWsas" />


    <!-- NoIndex on pages with vendors not known to the shop -->
    {%- if request.path == '/collections/vendors' -%}
      {%- assign lowercase_vendors = shop.vendors | join: ',' | downcase | split: ',' -%}
      {%- assign lowercase_input = collection.title | downcase -%}
      {%- unless lowercase_vendors contains lowercase_input -%}
        <meta name="robots" content="noindex">
      {%- endunless -%}
    {%- endif -%}

    <title>
      {{ page_title }}
      {% if current_tags -%}
        {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
      {%- endif %}
      {% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}
      {% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
    </title>

    <link rel="stylesheet" href="{{ 'swiper-bundle.min.css' | asset_url }}">
    <script src="{{ 'swiper-bundle.min.js' | asset_url }}" defer></script>

    {%- if page_description -%}
      <meta name="description" content="{{ page_description | escape }}">
    {%- endif -%}

    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon -%}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '96x' }}" type="image/png">
    {%- endif -%}

    <script>
      window.experiments = {
        data: { product: { id: {{ product.id | json }}, title: {{ product.title | json }} } }
      };
    </script>

    <script>
      window.enable_superchat = {{ settings.enable_superchat }};
      window.superchat_delay = {{ settings.superchat_delay | times: 1000 }}
    </script>

    {% render 'social-meta-tags' %}
    {% render 'css-variables' %}

    {{ content_for_header }}
    {% render 'cookie-consent' %}

    <!-- Keep this optimization but exclude Cookiebot-controlled tags (see above) -->
    <script>
      (function () {
        try {
          var e = navigator,
              t = e.userAgent,
              r = 0,
              a = (el, name, val) => el.setAttribute(name, val),
              o = (el, name) => el.removeAttribute(name),
              TAG = 'tagName';

          if (e.platform.indexOf('x86_64') > -1 && t.indexOf('CrOS') < 0 || t.indexOf('power') > -1 || t.indexOf('rix') > -1) {
            new MutationObserver((mut) => {
              mut.forEach(({ addedNodes }) => {
                addedNodes.forEach((node) => {
                  if (node && node.nodeType === 1) {
                    if (node[TAG] === 'IFRAME') { a(node, 'loading', 'lazy'); a(node, 'data-src', node.src); o(node, 'src'); }
                    if (node[TAG] === 'IMG' && r++ > 20) a(node, 'loading', 'lazy');
                    if (node[TAG] === 'SCRIPT') {
                      if (node.type === 'text/plain' || node.getAttribute('data-cookieconsent')) return; // don't break Cookiebot
                      a(node, 'data-src', node.src); o(node, 'src'); node.type = 'text/lazyload';
                    }
                  }
                });
              });
            }).observe(document.documentElement, { childList: true, subtree: true });
          }

          var q = (sel) => document.querySelector(sel), now = () => Date.now(), start = now();
          (function pump() {
            if (!(now() - start > 500)) {
              if (!q('body>meta')) return setTimeout(pump, 5);
              var head = q('head');
              document.querySelectorAll("meta,link:not([rel='stylesheet']),title").forEach((n) => head.append(n));
            }
          })();
        } catch (m) {}
      })();
    </script>

    <link rel="stylesheet" href="{{ 'bs-mobile-sidebar-nav.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'theme.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'bs-custom.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'recommended-search-products.css' | asset_url }}">

    {%- render 'head-styles', layout: 'theme' -%}

    <script>
      {%- if request.page_type == 'policy' -%}
        document.addEventListener('DOMContentLoaded', function() {
          document.querySelector('.shopify-policy__title')?.classList.add('PageHeader','Heading','u-h1');
          document.querySelector('.shopify-policy__body')?.classList.add('Rte');
        });

        setTimeout(()=>{
          const cookieDeclaration = document.querySelector('.CookieDeclaration__injection');
          const cookieDeclarationScript = document.createElement('script');
          cookieDeclarationScript.setAttribute('id','CookieDeclaration');
          cookieDeclarationScript.setAttribute('src','https://consent.cookiebot.com/a4aa9c1a-9639-4e9f-8a23-4aef9c37b3cc/cd.js');
          cookieDeclarationScript.setAttribute('type','text/javascript');
          cookieDeclarationScript.setAttribute('async','true');
          cookieDeclaration?.appendChild(cookieDeclarationScript)
        },500)
      {%- endif -%}

      // Expose some globals
      window.theme = {
        pageType: {{ request.page_type | json }},
        moneyFormat: {{ shop.money_format | json }},
        moneyWithCurrencyFormat: {{ shop.money_with_currency_format | json }},
        productImageSize: {{ settings.product_image_size | json }},
        searchMode: {{ settings.search_mode | json }},
        showPageTransition: {{ settings.show_page_transition | json }},
        showElementStaggering: {{ settings.show_element_staggering | json }},
        showImageZooming: {{ settings.show_image_zooming | json }}
      };

      window.routes = {
        rootUrl: {{ routes.root_url | json }},
        rootUrlWithoutSlash: {% if routes.root_url == '/' %}''{% else %}{{ routes.root_url | json }}{% endif %},
        cartUrl: {{ routes.cart_url | json }},
        cartAddUrl: {{ routes.cart_add_url | json }},
        cartChangeUrl: {{ routes.cart_change_url | json }},
        searchUrl: {{ routes.search_url | json }},
        productRecommendationsUrl: {{ routes.product_recommendations_url | json }}
      };

      window.languages = {
        cartAddNote: {{ 'cart.general.add_note' | t | json }},
        cartEditNote: {{ 'cart.general.edit_note' | t | json }},
        productImageLoadingError: {{ 'product.slideshow.image_loading_error' | t | json }},
        productFormAddToCart: {% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t | json }}{% elsif product.template_suffix == 'donation' %}{{ 'product.form.add_to_cart_donation' | t | json }}{% else %}{{ 'product.form.add_to_cart' | t | json }}{% endif %},
        productFormUnavailable: {{ 'product.form.unavailable' | t | json }},
        productFormSoldOut: {{ 'product.form.sold_out' | t | json }},
        shippingEstimatorOneResult: {{ 'cart.shipping_estimator.one_result_title' | t | json }},
        shippingEstimatorMoreResults: {{ 'cart.shipping_estimator.more_results_title' | t | json }},
        shippingEstimatorNoResults: {{ 'cart.shipping_estimator.no_results_title' | t | json }}
      };

      window.lazySizesConfig = { loadHidden: false, hFac: 0.5, expFactor: 2, ricTimeout: 150, lazyClass: 'Image--lazyLoad', loadingClass: 'Image--lazyLoading', loadedClass: 'Image--lazyLoaded' };

      {% if customer %} window.Shopify.isUserLoggedIn = true; {% else %} window.Shopify.isUserLoggedIn = false; {% endif %}

      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      document.documentElement.style.setProperty('--window-height', window.innerHeight + 'px');

      (function() {
        document.documentElement.className += ((window.CSS && window.CSS.supports('(position: sticky) or (position: -webkit-sticky)')) ? ' supports-sticky' : ' no-supports-sticky');
        document.documentElement.className += (window.matchMedia('(-moz-touch-enabled: 1), (hover: none)')).matches ? ' no-supports-hover' : ' supports-hover';
      }());
    </script>

    <script src="{{ 'lazysizes.min.js' | asset_url }}" async></script>

    {%- if template == 'customers/addresses' -%}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>
      <script src="{{ 'customer_area.js' | shopify_asset_url }}" defer></script>
    {%- endif -%}

    <script src="https://cdn.polyfill.io/v3/polyfill.min.js?unknown=polyfill&features=fetch,Element.prototype.closest,Element.prototype.remove,Element.prototype.classList,Array.prototype.includes,Array.prototype.fill,Object.assign,CustomEvent,IntersectionObserver,IntersectionObserverEntry,URL" defer></script>
    <script src="{{ 'libs.min.js' | asset_url }}" defer></script>

    <!-- jQuery (does not set cookies) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script src="{{ 'theme.min.js' | asset_url }}" defer></script>
    <script src="{{ 'bs-cart-drawer.js' | asset_url }}" defer></script>
    <script src="{{ 'search-manipulation.js' | asset_url }}" defer></script>
    <script src="{{ 'bs-dentalspray-redirect.js' | asset_url }}"></script>

    <script>
      (function () {
        window.onpageshow = function() {
          if (window.theme.showPageTransition) {
            var pageTransition = document.querySelector('.PageTransition');
            if (pageTransition) { pageTransition.style.visibility = 'visible'; pageTransition.style.opacity = '0'; }
          }
          document.documentElement.dispatchEvent(new CustomEvent('cart:refresh', { bubbles: true }));
        };
      })();
    </script>

    {%- render 'head-scripts', layout: 'theme' -%}

    {% render 'microdata-schema' %}
    {% include 'ufe-offer' %}

    {% if template.name == 'index' %}
      <!-- Amazon Ad Tag (marketing) -->
      <script type="text/plain" data-cookieconsent="marketing">
        !function(w,d,s,t,a){if(w.amzn)return;w.amzn=a=function(){w.amzn.q.push([arguments,(new Date).getTime()])};a.q=[];a.version="0.0";s=d.createElement("script");s.src="https://c.amazon-adsystem.com/aat/amzn.js";s.id="amzn-pixel";s.async=true;t=d.getElementsByTagName("script")[0];t.parentNode.insertBefore(s,t)}(window,document);
        amzn("setRegion", "EU");
        amzn("addTag", "9ed9779f-1bce-49a3-a8de-4434d6a6c0be");
        amzn("trackEvent", "PageView");
      </script>
      <!-- END: Amazon Ad Tag -->
    {% endif %}

    {% render 'rapid-search-settings' %}
  </head>

  {%- capture classes -%}features--heading-{{ settings.heading_size }}{%- endcapture -%}
  {%- if settings.uppercase_heading -%}{%- assign classes = classes | append: ' features--heading-uppercase' -%}{%- endif -%}
  {%- if settings.product_show_price_on_hover -%}{%- assign classes = classes | append: ' features--show-price-on-hover' -%}{%- endif -%}
  {%- if settings.show_page_transition -%}{%- assign classes = classes | append: ' features--show-page-transition' -%}{%- endif -%}
  {%- if settings.show_button_transition -%}{%- assign classes = classes | append: ' features--show-button-transition' -%}{%- endif -%}
  {%- if settings.show_image_zooming -%}{%- assign classes = classes | append: ' features--show-image-zooming' -%}{%- endif -%}
  {%- if settings.show_element_staggering -%}{%- assign classes = classes | append: ' features--show-element-staggering' -%}{%- endif -%}
  {%- assign shopCurrencySymbol = 100 | money | replace: '1.00' | replace: '1,00' -%}

  <body class="prestige--v4 {{ classes }} {% if template.directory %}template-{{ template.directory | handle }}{% endif %} template-{{ template.name | handle }}" data-currency-symbol="{{ shopCurrencySymbol }}">

    <a class="PageSkipLink u-visually-hidden" href="#main">{{ 'header.navigation.skip_to_content' | t }}</a>
    <span class="LoadingBar"></span>
    <div class="PageOverlay"></div>

    {%- if settings.show_page_transition -%}
      <div class="PageTransition"></div>
    {%- endif -%}

    {% section 'popup' %}
    {% section 'sidebar-menu' %}

    {%- if template != 'cart' -%}
      {% section 'cart-drawer' %}
    {%- endif -%}

    <div class="PageContainer">
      {% section 'announcement' %}
      {% section 'header' %}

      <main id="main" role="main">
        {{ content_for_layout }}
      </main>
      {% section 'footer' %}
    </div>

    <!-- KLAVIYO (marketing) â€” load only after consent -->
    <script>
      function loadKlaviyoWhenAllowed() {
        if (!window.Cookiebot || !Cookiebot.consent.marketing) return;
        // Prevent duplicate loads
        if (window.__klaviyoLoaded) return; window.__klaviyoLoaded = true;
        Cookiebot.getScript('https://a.klaviyo.com/media/js/onsite/onsite.js', true, function () {
          try {
            var klaviyo = window.klaviyo = window.klaviyo || [];
            klaviyo.init({ account: 'Xfhnkz', platform: 'shopify' });
            klaviyo.enable('backinstock', {
              trigger: {
                product_page_text: 'Benachrichtige mich, wenn verfÃ¼gbar',
                product_page_class: 'Button Button--full Button--primary',
                product_page_text_align: 'center',
                product_page_margin: '0 0 8px',
                replace_anchor: false,
                alternate_anchor: 'BackInStockAnchor'
              },
              modal: {
                headline: '{product_name}',
                body_content: 'Registriere dich, um eine Nachricht zu erhalten, wenn dieser Artikel wieder verfÃ¼gbar ist.',
                email_field_label: 'Email',
                button_label: 'Benachrichtige mich, wenn verfÃ¼gbar',
                subscription_success_label: 'Du hast es geschafft! Wir werden uns melden, wenn der Artikel wieder da ist.',
                footer_content: '',
                drop_background_color: '#000',
                background_color: '#fff',
                text_color: '#222',
                button_text_color: '#fff',
                button_background_color: '#f1af9e',
                close_button_color: '#ccc',
                error_background_color: '#fcd6d7',
                error_text_color: '#C72E2F',
                success_background_color: '#d3efcd',
                success_text_color: '#1B9500'
              }
            });
          } catch (e) {}
        });
      }
      window.addEventListener('CookiebotOnAccept', loadKlaviyoWhenAllowed);
      window.addEventListener('CookiebotOnConsentReady', loadKlaviyoWhenAllowed);
    </script>

    <!-- NextLevel Network Tag â€” already gated above as marketing in HEAD (kept) -->

    <!-- Reviews.io (marketing) â€” load JS & CSS only after consent, then init -->
    <script>
      function loadReviewsIoWhenAllowed() {
        if (!window.Cookiebot || !Cookiebot.consent.marketing) return;
        if (window.__reviewsLoaded) return; window.__reviewsLoaded = true;
        // Inject CSS lazily to avoid CF __cf_bm before consent
        var css = document.createElement('link');
        css.rel = 'stylesheet';
        css.href = 'https://widget.reviews.io/rating-snippet/dist.css';
        document.head.appendChild(css);
        Cookiebot.getScript('https://widget.reviews.io/rating-snippet/dist.js', true, function () {
          try {
            ratingSnippet('ruk_rating_snippet', {
              store: 'tierliebhaber.de',
              mode: 'default',
              color: '#fbd343',
              linebreak: false,
              text: "{{ 'product.tabs.reviews' | t }}",
              singularText: "{{ 'product.tabs.reviews_singular' | t }}",
              lang: 'de',
              usePolaris: true,
              showEmptyStars: false,
            });
          } catch (e) {}
        });
      }
      window.addEventListener('CookiebotOnAccept', loadReviewsIoWhenAllowed);
      window.addEventListener('CookiebotOnConsentReady', loadReviewsIoWhenAllowed);
    </script>

    <!-- WhatsApp widget (marketing) â€” load only after consent) -->
    <script>
      function loadWhatsappWhenAllowed() {
        if (!window.Cookiebot || !Cookiebot.consent.marketing) return;
        if (window.__waLoaded) return; window.__waLoaded = true;
        Cookiebot.getScript('https://customized-whatsapp-widget.chatarmin.com/widget-fetcher.js?w_id=6811de72e886703c08521660&u_id=680a53d680aac276290b3339', true);
      }
      window.addEventListener('CookiebotOnAccept', loadWhatsappWhenAllowed);
      window.addEventListener('CookiebotOnConsentReady', loadWhatsappWhenAllowed);
    </script>

  </body>
</html>
