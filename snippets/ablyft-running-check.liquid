    {% comment %}
    ==============================================================================
    ABlyft A/B-Testing - CORE SCRIPT
    ==============================================================================
    WICHTIG: Im <head> laden um FOOC (Flash of Original Content) zu vermeiden
    Zweck: Variantenauslieferung MUSS vor DOM-Rendering passieren
    ==============================================================================
    {% endcomment %}
    
    {% comment %} Preconnect fÃ¼r schnelleres Laden {% endcomment %}
    <link rel="preconnect" href="https://cdn.ablyft.com">
    <link rel="dns-prefetch" href="https://cdn.ablyft.com">
    
    {% comment %} Anti-Flicker Snippet {% endcomment %}
    <style id="ablyft-anti-flicker">
      body { opacity: 0 !important; transition: opacity 0.2s ease-in; }
    </style>
    
    <script>
      // Fallback: Body nach max. 2 Sekunden zeigen
      (function() {
        var timeout = setTimeout(function() {
          var style = document.getElementById('ablyft-anti-flicker');
          if (style && style.parentNode) {
            style.parentNode.removeChild(style);
          }
          document.body.style.opacity = '1';
          console.log('[ABlyft] Anti-flicker timeout reached');
        }, 2000);
        
        // Wenn ABlyft frÃ¼her fertig ist, zeige sofort
        window.ablyftShowBody = function() {
          clearTimeout(timeout);
          var style = document.getElementById('ablyft-anti-flicker');
          if (style && style.parentNode) {
            style.parentNode.removeChild(style);
          }
          document.body.style.opacity = '1';
          console.log('[ABlyft] Body shown');
        };
      })();
    </script>
    
    {% comment %} ABlyft Core Script - MIT Consent {% endcomment %}
    <script type="text/plain" data-cookieconsent="marketing" async src="https://cdn.ablyft.com/s/55886406.js"></script>
    
    {% comment %} ABlyft Queue Initialisierung & Reload Logic {% endcomment %}
    <script type="text/plain" data-cookieconsent="marketing">
    (function() {
      'use strict';
      
      window['ablyft'] = window['ablyft'] || [];
      
      // ============ KONFIGURATION ============
      const CONFIG = {
        sessionKey: 'ablyft_reload_done',
        waitTime: 600,
        reloadDelay: 100,
        debug: true
      };
      
      // ============ HELPER FUNCTIONS ============
      function log(message, data) {
        if (CONFIG.debug) {
          console.log('[ABlyft Core]', message, data || '');
        }
      }
      
      function parseAblyftCookie() {
        const match = document.cookie.match(/ablyft_exps=([^;]+)/);
        if (!match) return null;
        
        try {
          return JSON.parse(decodeURIComponent(match[1]));
        } catch(e) {
          return null;
        }
      }
      
      // ============ DETECTION ============
      function checkForExperiments() {
        const checks = {
          cookie: function() {
            const experiments = parseAblyftCookie();
            return experiments && Object.keys(experiments).length > 0;
          },
          
          windowObject: function() {
            if (!window.ablyft) return false;
            
            return !!(
              (window.ablyft.experiments && window.ablyft.experiments.length > 0) ||
              (window.ablyft._experiments && Object.keys(window.ablyft._experiments).length > 0) ||
              window.ablyft._initialized ||
              window.ablyft._ready
            );
          },
          
          dom: function() {
            return !!(
              document.querySelector('[data-ablyft]') ||
              document.querySelector('[class*="ablyft"]')
            );
          }
        };
        
        const results = {
          cookie: checks.cookie(),
          windowObject: checks.windowObject(),
          dom: checks.dom()
        };
        
        log('Detection:', results);
        
        return Object.values(results).some(r => r === true);
      }
      
      // ============ MAIN LOGIC ============
      function init() {
        // Check: Bereits reloaded?
        if (sessionStorage.getItem(CONFIG.sessionKey)) {
          log('Already initialized - showing body');
          window.ablyftShowBody();
          return;
        }
        
        log('Waiting for ABlyft initialization...');
        
        // Warte auf ABlyft Initialisierung
        setTimeout(function() {
          if (checkForExperiments()) {
            log('ðŸŽ¯ Experiments detected - reloading');
            sessionStorage.setItem(CONFIG.sessionKey, Date.now());
            
            setTimeout(function() {
              window.location.reload();
            }, CONFIG.reloadDelay);
          } else {
            log('No experiments on this page - showing body');
            window.ablyftShowBody();
          }
        }, CONFIG.waitTime);
      }
      
      // ============ START ============
      // Starte nach DOMContentLoaded (damit Cookiebot durch ist)
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
      } else {
        init();
      }
      
    })();
   
// In Console nach Page Load:
console.log('ABlyft loaded:', !!window.ablyft);
console.log('Body visible:', document.body.style.opacity);
console.log('Anti-flicker removed:', !document.getElementById('ablyft-anti-flicker'));

</script>
    