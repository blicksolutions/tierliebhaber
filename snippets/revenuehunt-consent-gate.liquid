/* ================= RevenueHunt Consent Gate ============== */ 

(function(){
  'use strict';
  if (window.__REVENUEHUNT_CONSENT_GATE_LOADED__) return;
  window.__REVENUEHUNT_CONSENT_GATE_LOADED__ = true;

  var BLOCKED_HOSTS = [
    "admin.revenuehunt.com",
    "api.revenuehunt.com",
    "cdn.revenuehunt.com"
  ];
  
  var DEFAULT_SCRIPT = "https://admin.revenuehunt.com/embed.js?shop=tierliebhaber-animagus.myshopify.com";

  function hasCookiebot(){ 
    return !!(window.Cookiebot && window.Cookiebot.consent); 
  }
  
  function marketingOn(){
    try{
      if (!hasCookiebot()) return false;
      return window.Cookiebot.consent.marketing === true;
    }catch(e){ 
      return false; 
    }
  }
  
  function isBlockedUrl(url){
    if (!url) return false;
    try{
      var urlStr = url.toString ? url.toString() : String(url);
      var u = new URL(urlStr, location.href);
      var h = u.hostname;
      return BLOCKED_HOSTS.some(function(b){ return h === b || h.endsWith("." + b); });
    }catch(e){ 
      return false; 
    }
  }

  var __loaded = new Set();
  var blockedScriptQueue = [];

  function loadScript(src){
    if (!src || __loaded.has(src)) return Promise.resolve();
    
    return new Promise(function(res, rej){
      try {
        var s = document.createElement('script');
        s.src = src;
        s.async = true;
        s.onload = function(){
          __loaded.add(src);
          res(src);
        };
        s.onerror = function(){
          rej(new Error("Script load failed: " + src));
        };
        document.head.appendChild(s);
      } catch(e) {
        rej(e);
      }
    });
  }

  /* ===== XHR Patch ===== */
  (function(){
    var open = XMLHttpRequest.prototype.open;
    if (!XMLHttpRequest.prototype.__revenuehuntPatched) {
      XMLHttpRequest.prototype.__revenuehuntPatched = true;
      XMLHttpRequest.prototype.open = function(m, u){
        try {
          if (!marketingOn() && isBlockedUrl(u)) return;
        } catch(e) {}
        return open.apply(this, arguments);
      };
    }
  })();

  /* ===== Fetch Patch ===== */
  (function(){
    var _f = window.fetch;
    if (!_f.__revenuehuntPatched) {
      window.fetch = function(r, i){
        try {
          var u = (typeof r === "string") ? r : (r && r.url);
          if (!marketingOn() && u && isBlockedUrl(u)) {
            return Promise.reject(new TypeError("Blocked by consent gate"));
          }
        } catch(e) {}
        return _f.apply(this, arguments);
      };
      window.fetch.__revenuehuntPatched = true;
    }
  })();

  /* ===== DOM Blocker (KORRIGIERT) ===== */
  function patchElementMethod(methodName){
    var original = Element.prototype[methodName];
    if (!original || original.__revenuehuntPatched) return;
    
    function wrapped(child){
      var shouldBlock = false;
      var src = null;
      
      try{
        if (child && child.tagName) {
          var tagName = child.tagName.toLowerCase();
          src = child.src || (child.getAttribute && child.getAttribute("src"));
          
          if (tagName === "script" && src && __loaded.has(src)) return child;
          
          if ((tagName === "script" || tagName === "iframe") && src && !marketingOn() && isBlockedUrl(src)) {
            if (tagName === "script" && !blockedScriptQueue.includes(src)) {
              blockedScriptQueue.push(src);
            }
            shouldBlock = true;
          }
        }
      }catch(e){}
      
      if (shouldBlock) return child;
      return original.call(this, child);
    }
    wrapped.__revenuehuntPatched = true;
    Element.prototype[methodName] = wrapped;
  }
  
  patchElementMethod("appendChild");
  patchElementMethod("insertBefore");

  /* ===== MutationObserver ===== */
  var mo = new MutationObserver(function(mutations){
    if (marketingOn()) return;
    
    mutations.forEach(function(mutation){
      if (!mutation.addedNodes) return;
      
      mutation.addedNodes.forEach(function(node){
        try{
          if (node && node.tagName) {
            var tagName = node.tagName.toLowerCase();
            var src = node.src || (node.getAttribute && node.getAttribute('src'));
            if ((tagName === 'script' || tagName === 'iframe') && src && isBlockedUrl(src)) {
              if (tagName === 'script' && !blockedScriptQueue.includes(src)) {
                blockedScriptQueue.push(src);
              }
              node.remove();
            }
          }
        }catch(e){}
      });
    });
  });
  
  try {
    mo.observe(document.documentElement, {childList: true, subtree: true});
  } catch(e) {}

  /* ===== Enable ===== */
  var enabledOnce = false;
  function enable(){
    if (enabledOnce || !marketingOn()) return;
    enabledOnce = true;

    (async function(){
      try{
        await new Promise(function(r){ setTimeout(r, 100); });
        
        var toLoad = blockedScriptQueue.length ? blockedScriptQueue.slice() : [DEFAULT_SCRIPT];
        blockedScriptQueue.length = 0;
        
        for (var i = 0; i < toLoad.length; i++) {
          try {
            await loadScript(toLoad[i]);
          } catch(e) {}
        }
        
        if (mo && mo.disconnect) {
          try {
            mo.disconnect();
          } catch(e) {}
        }
      }catch(err){}
    })();
  }

  /* ===== Events ===== */
  function on(evt, fn){ 
    try {
      window.addEventListener(evt, fn, false);
    } catch(e) {}
  }
  
  if (marketingOn()) enable();
  on("CookiebotOnLoad", enable);
  on("CookiebotOnConsentReady", enable);
  on("CookiebotOnAccept", enable);
  
  try {
    document.addEventListener("DOMContentLoaded", enable);
    window.addEventListener("load", enable);
    document.addEventListener("visibilitychange", function(){
      if (document.visibilityState === "visible") enable();
    });
  } catch(e) {}
})();


/* ================= RevenueHunt Section Manager ============== */ 

(function(){
  'use strict';
  
  if (window.__REVENUEHUNT_SECTION_MANAGER_LOADED__) return;
  window.__REVENUEHUNT_SECTION_MANAGER_LOADED__ = true;
  
  function hasMarketingConsent() {
    try {
      return window.Cookiebot && 
             window.Cookiebot.consent && 
             window.Cookiebot.consent.marketing === true;
    } catch(e) {
      return false;
    }
  }
  
  function toggleRevenueHuntSection() {
    try {
      var hasConsent = hasMarketingConsent();
      var revenueHuntSection = document.querySelector('#section-slideshow_dKUeWg');
      
      if (revenueHuntSection) {
        revenueHuntSection.style.display = hasConsent ? 'block' : 'none';
      }
    } catch(e) {}
  }
  
  toggleRevenueHuntSection();
  
  try {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', toggleRevenueHuntSection);
    }
    
    window.addEventListener('CookiebotOnAccept', toggleRevenueHuntSection);
    window.addEventListener('CookiebotOnDecline', toggleRevenueHuntSection);
    window.addEventListener('CookiebotOnLoad', toggleRevenueHuntSection);
  } catch(e) {}
})();