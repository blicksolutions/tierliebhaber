{%- assign selected_variant = product.selected_or_first_available_variant -%}
{%- if show_like_badge == nil -%}
  {%- assign show_like_badge = true -%}
{%- endif -%}
{%-if show_description == nil -%}
  {%- assign show_description = false-%}
{%- endif -%}
{%-if show_price == nil -%}
  {%- assign show_price = true-%}
{%- endif -%}

<div class="ProductMeta">
  {%- if section.settings.show_vendor and product.vendor != blank -%}
    <h2 class="ProductMeta__Vendor Heading u-h6">
      {%- assign vendor_handle = product.vendor | handle -%}
      {%- assign collection_for_vendor = collections[vendor_handle] -%}

      {%- unless collection_for_vendor.empty? -%}
        <a href="{{ collection_for_vendor.url }}">{{ product.vendor }}</a>
      {%- else -%}
        {{- product.vendor -}}
      {%- endunless -%}
    </h2>
  {%- endif -%}

  <div class="ProductBadges">
    {%- if product.metafields.badge.text -%}
      {%- render 'product-badge', product: product -%}
    {%- endif -%}
    {%- if product.metafields.meta.pet_icons.value -%}
      {%- assign pet_icons = product.metafields.meta.pet_icons.value | split: ',' -%}

      <div class="PetIcons">
        {%- for icon in pet_icons -%}
          {%- render 'pet-icons', icon: icon -%}
        {%- endfor -%}
      </div>
    {%- endif -%}
  </div>

  {%- if show_like_badge -%}
    {%- render 'like-badge', classes: 'hidden-pocket' -%}
  {%- endif-%}

  <h1 class="ProductMeta__Title Heading u-h2">
    {%- if template.name == 'product' -%}
      {%-if custom_title-%}{{custom_title}}{%-else-%}{{- product.title -}}{%-endif-%}
    {%- else -%}
      <a href="{{ product.url }}">{{ product.title }}</a>
    {%- endif -%}
  </h1>

  {%- if section.settings.show_sku and selected_variant.sku != blank -%}
    <p class="ProductMeta__Sku Heading Text--subdued u-h6">{{ 'product.form.sku' | t }}: <span class="ProductMeta__SkuNumber">{{ selected_variant.sku }}</span></p>
  {%- endif -%}

  {% comment %}
  {%- if show_description -%}
    <p class="Product__Description">
      {{product.description}}
    </p>
  {%- endif -%}
  {% endcomment %}
{% comment %}Start automatically added Judge.me widget{% endcomment %}
  {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', concierge_install: true, product: product %}
{% comment %}End automatically added Judge.me widget{% endcomment %}

      <script>
document.addEventListener('DOMContentLoaded', function() {
    function generateRandom(min = window.progressBarMin || 20, max = window.progressBarMax || 50) {
        let difference = max - min;
        let rand = Math.random();
        rand = Math.floor(rand * difference);
        rand = rand + min;
        return rand;
    }

    function updateProgressBar(productId) {
        let stockValue = localStorage.getItem(`product-${productId}-stock-value`);

        if (!stockValue) {
            stockValue = generateRandom(); // Generating random stock value
            localStorage.setItem(`product-${productId}-stock-value`, stockValue);
        }

        let percentageEl = document.querySelector('.acc-pr39-percentage')

        if (percentageEl) {
            percentageEl.textContent = `${stockValue}%`;
        }

        let progressBar = document.querySelector('.acc-pr39-progress-bar');

        if (progressBar) {
            progressBar.style.setProperty('--progress-width', `${stockValue}%`);
        }
    }

    let productForm = document.querySelector('.ProductForm');
    if (productForm) {
        let productId = productForm.getAttribute('data-productid');
        if (productId) {
            updateProgressBar(productId);
        }
    }

    let productId = productForm.getAttribute('data-productid');

    // stock bar handling
    const sizeSwatches = document.querySelectorAll('.SizeSwatch__Radio');
    const pdpStockBar = document.querySelector('.pdp-stock-bar');

    sizeSwatches.forEach((sizeSwatch) => {
        sizeSwatch.addEventListener('click', () => {
            console.log("CLIKCKK")
            setTimeout(() => {
                fetch(location.href)
                    .then(response => response.text())
                    .then(newPdp => {
                        const newhtml = new DOMParser().parseFromString(newPdp, 'text/html');
                        pdpStockBar.innerHTML = newhtml.querySelector('.pdp-stock-bar').innerHTML;
                        updateProgressBar(productId);
                    });
            }, 250);
        });
    });
});
</script>

  <style>
.acc-pr39-progress-bar {
    flex-grow: 1; /* Take up all available space */
    height: 6px;
    border: 1px solid #3578b5;
    border-radius: 30px;
    position: relative;
    background-color: #fff;
    margin-left: 10px; /* Add space between the percentage and the progress bar */
    max-width: 253px;
}

.acc-pr39-progress-bar::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    background-color: #3578b5;
    height: 100%;
    border-radius: 30px;
    width: var(--progress-width, 0%); /* Use the custom property */
}
  </style>

  <div class="pdp-stock-bar wrapper-center-align">
    {% if selected_variant.available %}
      <div class="acc-tl-pr39-wrapper">
        <div class="acc-pr39-title">Nur solange der Vorrat reicht!</div>
        <div class="acc-pr39-percentage-wrapper">
          <span class="acc-pr39-percentage"></span>
          <div class="acc-pr39-progress-bar"></div>
        </div>
      </div>
    {% endif %}
  </div>

<script>
/* Function to calculate and update price difference */
function updatePriceDifference() {
  setTimeout(() => {
    let originalPrice = parseFloat(document.querySelector('.ProductMeta__Price.Price--compareAt').textContent.replace("€", "").replace(",", "."));
    let currentPrice = parseFloat(document.querySelector('.ProductMeta__Price.Price--highlight').textContent.replace("€", "").replace(",", "."));
    let priceDifference = originalPrice - currentPrice;
    document.querySelector('.price-difference').textContent = 'Du sparst €' + priceDifference.toFixed(2).replace(".", ",");
    console.log("Price difference updated:", priceDifference);
  }, 100); // Wait for 100ms before updating the price difference
}

/* Function to wait for Recharge widget options to load */
function waitForRechargeWidget() {
  setTimeout(waitForPriceChange, 2000); // Wait for 2000ms (2 seconds) for the Recharge widget to load
}

/* Function to wait for changes in the specified class */
function waitForPriceChange() {
  let radioOptions = document.querySelectorAll(".rc_widget__option");
  if (radioOptions.length === 0) {
    waitForRechargeWidget(); // Retry if Recharge widget options are not found
    return;
  }
  radioOptions.forEach(function(option) {
    option.addEventListener("click", function() {
      updatePriceDifference();
    });
  });
}

/* Wait for the DOM to load before executing */
document.addEventListener("DOMContentLoaded", function() {
  waitForRechargeWidget();
});
</script>

  {%- if product.template_suffix != 'coming-soon' and show_price -%}
    <div class="ProductMeta__PriceList Heading">
      {%- if selected_variant.compare_at_price > selected_variant.price -%}
        {% assign price_difference = selected_variant.compare_at_price | minus: selected_variant.price %}
        <div class="pricing-newvisitor">
          <span class="ProductMeta__Price Price Price--highlight Text--subdued u-h4">
            {{- selected_variant.price | money_without_trailing_zeros -}}
          </span>
          <span class="ProductMeta__Price Price Price--compareAt Text--subdued u-h4">
            {{- selected_variant.compare_at_price | money_without_trailing_zeros -}}
          </span>
        </div>
        <div class="pricing-retvisitor" style="display:none">
          <span class="ProductMeta__Price Price Price--highlight Text--subdued u-h4">
            {{- selected_variant.price | money_without_trailing_zeros -}}
          </span>
          <span class="ProductMeta__Price Price Price--compareAt Text--subdued u-h4">
            {{- selected_variant.compare_at_price | money_without_trailing_zeros -}}
          </span>
          <span class="price-difference">Du sparst {{ price_difference | money_without_trailing_zeros }}</span>
        </div>
      {%- else -%}
        <span class="ProductMeta__Price Price Text--subdued u-h4">
          {{- selected_variant.price | money_without_trailing_zeros -}}
        </span>
      {%- endif -%}
    </div>

    {%- liquid
      assign reference_product = product.metafields.reference.main_product.value
      assign reference_product_selected_variant = reference_product.variants | where: 'title', selected_variant.title | first

      unless selected_variant.unit_price == null and reference_product_selected_variant
        assign reference_product_selected_variant = selected_variant
      endunless
    -%}

    <div class="ProductMeta__UnitPriceMeasurement" style="display: {%- if reference_product_selected_variant.unit_price_measurement -%}block{% else %}none{% endif %}">
      <div class="UnitPriceMeasurement Heading u-h6 Text--subdued">
        <span class="UnitPriceMeasurement__Price" data-alt-price="{{ reference_product_selected_variant.unit_price }}">{{ reference_product_selected_variant.unit_price | money_without_trailing_zeros }}</span>
        <span class="UnitPriceMeasurement__Separator">/ </span>
        <span class="UnitPriceMeasurement__ReferenceValue" style="display: {% if reference_product_selected_variant.unit_price_measurement.reference_value != 1 %}inline{% else %}none{% endif %}">{{ reference_product_selected_variant.unit_price_measurement.reference_value }}</span>
        <span class="UnitPriceMeasurement__ReferenceUnit">{{ reference_product_selected_variant.unit_price_measurement.reference_unit }}</span>
      </div>
    </div>

    <script>
    /* update unit price when user switches from normal buy to abonnement via "Recharge" App */
    window.addEventListener("load" , async function() {
      let discountElmnt;
      while (!(discountElmnt = document.querySelector("#shopify-section-{{ section.id }} .rc_widget .rc_widget__option__discount"))) {
        await new Promise((resolve , reject) => {
          window.setTimeout(resolve , 50);
        });
      }
      discount = discountElmnt.innerHTML;
      discount = discount.replace("%" , "");
      discount/= 100;
      factor = 1 - discount;
      let unitpriceElmnt = document.querySelector("#shopify-section-{{ section.id }} .UnitPriceMeasurement__Price");
      let price = unitpriceElmnt.getAttribute("data-alt-price");
      price*= factor;
      price = Math.round(price);
      price/= 100;
      price = "€" + price.toString().replace("." , ",");
      unitpriceElmnt.setAttribute("data-alt-price" , price);
      let status;
      function type(item) {
        if (item.classList.contains("rc-option__subsave")) {
          return "subsave";
        } else {
          return "onetime";
        }
      }
      document.querySelectorAll("#shopify-section-{{ section.id }} .rc-radio-group__options .rc_widget__option ").forEach(async function(item) {
        if (item.querySelector("input.rc-radio__input").checked) {
          status = type(item);
        }
        item.addEventListener("click" , function() {
          if (status !== type(item)) {
            let price = unitpriceElmnt.getAttribute("data-alt-price");
            unitpriceElmnt.setAttribute("data-alt-price" , unitpriceElmnt.innerHTML);
            unitpriceElmnt.innerHTML = price;
          }
          status = type(item);
        } , false);
      });
    });
    </script>
  {%- endif -%}

  {%- if section.settings.show_taxes_included -%}
    {%- if shop.taxes_included or shop.shipping_policy.body != blank -%}
      <p class="ProductMeta__TaxNotice Rte">
        {%- if shop.taxes_included -%}
          {{ 'product.general.include_taxes' | t }}
        {%- endif -%}

        {%- if shop.shipping_policy.body != blank  -%}
          {%- assign has_free_shipping = selected_variant.metafields.shipping.has_free_shipping.value -%}

          <span class="js-ProductMeta__ShippingInfo{% if has_free_shipping %} u-Hidden{% endif %}">
            {{ 'product.general.shipping_policy_html' | t: link: shop.shipping_policy.url }}
          </span>
        {%- endif -%}
      </p>
    {%- endif -%}
  {%- endif -%}
</div>

<script type="application/json" data-product>
  {
    "id": {{ product.id | json }},
    "variants": [
      {%- for variant in product.variants -%}
        {
          "id": {{ variant.id | json }},
          "hasFreeShipping": {{ variant.metafields.shipping.has_free_shipping.value | default: false | json }}
        }
        {%- unless forloop.index == product.variants.size -%},{%- endunless -%}
      {%- endfor -%}
    ]
  }
</script>

{%- if product.metafields.reference.main_product.type == 'product_reference' -%}
  <script type="application/json" data-reference-product>
    {
      "id": {{ reference_product.id | json }},
      "variants": [
        {%- for variant in reference_product.variants -%}
          {
            "title": {{ variant.title | json }},
            "unit_price": {{ variant.unit_price | json }},
            "unit_price_measurement": {
              "measured_type": {{ variant.unit_price_measurement.measured_type | json }},
              "quantity_unit": {{ variant.unit_price_measurement.quantity_unit | json }},
              "quantity_value": {{ variant.unit_price_measurement.quantity_value | json }},
              "reference_unit": {{ variant.unit_price_measurement.reference_unit | json }},
              "reference_value": {{ variant.unit_price_measurement.reference_value | json }}
            }
          }
          {%- unless forloop.index == reference_product.variants.size -%},{%- endunless -%}
        {%- endfor -%}
      ]
    }
  </script>
{%- endif -%}
