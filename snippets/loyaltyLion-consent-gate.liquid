/* ============= LoyaltyLion Consent Gate ============= */
(function(){
  'use strict';
  if (window.__LOYALTYLION_GATE__) return;
  window.__LOYALTYLION_GATE__ = true;

  function hasConsent(){
    try {
      return !!(window.Cookiebot && window.Cookiebot.consent && window.Cookiebot.consent.marketing);
    } catch(e) {
      return false;
    }
  }

  function isLoyaltyLion(url){
    if (!url) return false;
    try {
      var urlStr = url.toString ? url.toString() : String(url);
      return /loyaltylion\.(net|com)/i.test(urlStr);
    } catch(e) {
      return false;
    }
  }

  var blocked = [];
  var enabled = false;

  var _write = document.write;
  document.write = function(html) {
    try {
      if (!hasConsent() && html && isLoyaltyLion(html)) return;
    } catch(e) {}
    return _write.apply(this, arguments);
  };

  var _createElement = document.createElement;
  document.createElement = function(tag) {
    var el = _createElement.call(document, tag);
    
    try {
      if (tag && tag.toLowerCase() === 'script') {
        var _srcDesc = Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'src');
        if (_srcDesc && _srcDesc.set) {
          Object.defineProperty(el, 'src', {
            get: function() { return _srcDesc.get.call(this); },
            set: function(url) {
              try {
                if (!hasConsent() && isLoyaltyLion(url)) {
                  blocked.push(url);
                  this.setAttribute('data-ll-blocked', url);
                  this.type = 'text/plain';
                  return url;
                }
              } catch(e) {}
              return _srcDesc.set.call(this, url);
            }
          });
        }
      }
    } catch(e) {}
    return el;
  };

  var _appendChild = Element.prototype.appendChild;
  Element.prototype.appendChild = function(child) {
    var shouldBlock = false;
    var src = null;
    
    try {
      if (child && child.tagName === 'SCRIPT') {
        src = child.src || (child.getAttribute && child.getAttribute('src'));
        if (!hasConsent() && src && isLoyaltyLion(src)) {
          shouldBlock = true;
          blocked.push(src);
          child.setAttribute('data-ll-blocked', src);
          child.type = 'text/plain';
          try { child.removeAttribute('src'); } catch(e){}
        }
      }
    } catch(e) {}
    
    if (shouldBlock) return child;
    return _appendChild.call(this, child);
  };

  var _insertBefore = Element.prototype.insertBefore;
  Element.prototype.insertBefore = function(child, ref) {
    var shouldBlock = false;
    var src = null;
    
    try {
      if (child && child.tagName === 'SCRIPT') {
        src = child.src || (child.getAttribute && child.getAttribute('src'));
        if (!hasConsent() && src && isLoyaltyLion(src)) {
          shouldBlock = true;
          blocked.push(src);
          child.setAttribute('data-ll-blocked', src);
          child.type = 'text/plain';
          try { child.removeAttribute('src'); } catch(e){}
        }
      }
    } catch(e) {}
    
    if (shouldBlock) return child;
    return _insertBefore.call(this, child, ref);
  };

  var _fetch = window.fetch;
  window.fetch = function(url, opts) {
    try {
      var u = typeof url === 'string' ? url : (url && url.url);
      if (!hasConsent() && u && isLoyaltyLion(u)) {
        return Promise.reject(new TypeError('Blocked by consent'));
      }
    } catch(e) {}
    return _fetch.apply(this, arguments);
  };

  var _xhrOpen = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function(method, url) {
    try {
      if (!hasConsent() && isLoyaltyLion(url)) {
        this._blocked = true;
        return;
      }
    } catch(e) {}
    return _xhrOpen.apply(this, arguments);
  };

  var _xhrSend = XMLHttpRequest.prototype.send;
  XMLHttpRequest.prototype.send = function() {
    if (this._blocked) return;
    return _xhrSend.apply(this, arguments);
  };

  var observer = new MutationObserver(function(mutations) {
    if (hasConsent()) return;
    
    mutations.forEach(function(m) {
      if (!m.addedNodes) return;
      m.addedNodes.forEach(function(node) {
        try {
          if (node.tagName === 'SCRIPT') {
            var src = node.src || (node.getAttribute && node.getAttribute('src'));
            if (src && isLoyaltyLion(src)) {
              blocked.push(src);
              node.setAttribute('data-ll-blocked', src);
              node.type = 'text/plain';
              try { node.removeAttribute('src'); } catch(e){}
            }
          }
        } catch(e) {}
      });
    });
  });
  
  try {
    observer.observe(document.documentElement, {
      childList: true,
      subtree: true
    });
  } catch(e) {}

  function enable() {
    if (enabled) return;
    if (!hasConsent()) return;
    
    enabled = true;
    
    try {
      if (observer) observer.disconnect();
    } catch(e) {}
    
    var unique = Array.from(new Set(blocked));
    
    unique.forEach(function(src) {
      try {
        var script = document.createElement('script');
        script.src = src;
        script.async = true;
        document.head.appendChild(script);
      } catch(e) {}
    });
    
    try {
      document.querySelectorAll('script[data-ll-blocked]').forEach(function(s) {
        var src = s.getAttribute('data-ll-blocked');
        if (src) {
          var newScript = document.createElement('script');
          newScript.src = src;
          newScript.async = true;
          s.parentNode.replaceChild(newScript, s);
        }
      });
    } catch(e) {}
  }

  window.addEventListener('CookiebotOnAccept', enable);
  window.addEventListener('CookiebotOnLoad', enable);
  window.addEventListener('CookiebotOnConsentReady', enable);
  
  setTimeout(function() {
    if (hasConsent()) enable();
  }, 0);
})();

/* ============= LoyaltyLion Section Manager ============= */

/*
(function(){
  'use strict';
  if (window.__LL_SECTION__) return;
  window.__LL_SECTION__ = true;
  
  function hasConsent() {
    try {
      return !!(window.Cookiebot && window.Cookiebot.consent && window.Cookiebot.consent.marketing);
    } catch(e) {
      return false;
    }
  }
  
  function toggle() {
    try {
      var section = document.querySelector('#shopify-section-slideshow_xFQ8td');
      if (section) {
        section.style.display = hasConsent() ? 'block' : 'none';
      }
    } catch(e) {}
  }
  
  toggle();
  
  try {
    window.addEventListener('CookiebotOnAccept', toggle);
    window.addEventListener('CookiebotOnDecline', toggle);
    window.addEventListener('CookiebotOnLoad', toggle);
    
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', toggle);
    }
  } catch(e) {}
})();
*/