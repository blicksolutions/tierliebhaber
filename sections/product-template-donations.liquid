{%- capture section_settings -%}
{
  "enableHistoryState": true,
  "templateSuffix": {{ product.template_suffix | json }},
  "showInventoryQuantity": {{ section.settings.show_inventory_quantity | json }},
  "showSku": {{ section.settings.show_sku | json }},
  "stackProductImages": {{ section.settings.stack_images | json }},
  "showThumbnails": {{ section.settings.show_thumbnails | json }},
  "enableVideoLooping": {{ section.settings.enable_video_looping | json }},
  "inventoryQuantityThreshold": {{ section.settings.inventory_quantity_threshold }},
  "showPriceInButton": {{ section.settings.show_price_in_button | json }},
  "enableImageZoom": {{ section.settings.enable_image_zoom | json }},
  "showPaymentButton": {{ section.settings.show_payment_button | json }},
  "useAjaxCart": {% if settings.cart_type == 'drawer' %}true{% else %}false{% endif %}
}
{%- endcapture -%}

<section class="Product Product--{{ section.settings.image_size }}" data-section-id="{{ section.id }}" data-section-type="product" data-section-settings='{{ section_settings }}'>
  <div class="Product__Wrapper">
    {%- capture action_list_items -%}
      {%- if section.settings.enable_image_zoom -%}
        <div class="Product__ActionItem hidden-lap-and-up">
          <button class="RoundButton RoundButton--small RoundButton--flat" aria-label="{{ 'product.slideshow.zoom' | t | escape }}" data-action="open-product-zoom">{% render 'icon' with 'plus' %}</button>
        </div>
      {%- endif -%}

      {%- if section.settings.show_share_buttons -%}
        <div class="Product__ActionItem hidden-lap-and-up">
          <button class="RoundButton RoundButton--small RoundButton--flat" data-action="toggle-social-share" data-animate-bottom aria-expanded="false">
            <span class="RoundButton__PrimaryState">{% render 'icon' with 'share' %}</span>
            <span class="RoundButton__SecondaryState">{% render 'icon' with 'close' %}</span>
          </button>

          {%- assign share_url = shop.url | append: product.url -%}
          {%- assign twitter_text = product.title -%}
          {%- assign pinterest_description = product.description | strip_html | truncatewords: 15 | url_param_escape -%}
          {%- assign pinterest_image = product.featured_media | img_url: '1024x' | prepend: 'https:' -%}

          <div class="Product__ShareList" aria-hidden="true">
            <a class="Product__ShareItem" href="https://www.facebook.com/sharer.php?u={{ share_url }}" target="_blank" rel="noopener">{%- render 'icon' with 'facebook' -%} Facebook</a>
            <a class="Product__ShareItem" href="https://pinterest.com/pin/create/button/?url={{ share_url }}{% if pinterest_image != blank %}&media={{ pinterest_image }}{% endif %}&description={{ pinterest_description }}" target="_blank" rel="noopener">{%- render 'icon' with 'pinterest' -%} Pinterest</a>
            <a class="Product__ShareItem" href="https://twitter.com/share?{% if twitter_text != blank %}text={{twitter_text}}&{% endif %}url={{ share_url }}" target="_blank" rel="noopener">{%- render 'icon' with 'twitter' -%} Twitter</a>
          </div>
        </div>
      {%- endif -%}
    {%- endcapture -%}

    {%- capture product_aside -%}
      {%- comment -%}
      --------------------------------------------------------------------------------------------------------------------
      PRODUCT TABS
      --------------------------------------------------------------------------------------------------------------------
      {%- endcomment -%}

      {%- render 'product-tabs' -%}

      {%- comment -%}
      --------------------------------------------------------------------------------------------------------------------
      PRODUCT WEAR IT WITH

      We allow merchants to add a tag that looks like __with:product-handle to feature an additional product
      --------------------------------------------------------------------------------------------------------------------
      {%- endcomment -%}

      {%- for tag in product.tags -%}
        {%- if tag contains '__with' -%}
          {%- assign product_handle = tag | split: '__with:' | last -%}
          {%- assign associated_product = all_products[product_handle] -%}

          {%- if associated_product != empty -%}
            <div class="Section Section--spacingNormal">
              <header class="SectionHeader SectionHeader--center">
                <h3 class="SectionHeader__Heading Heading u-h4">{{ 'product.buy_it_with.title' | t }}</h3>
              </header>

              {% render 'product-item', product: associated_product, use_horizontal: true, show_labels: false, show_product_info: true, show_vendor: false, show_price_on_hover: false %}
            </div>

            {%- break -%}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endcapture -%}

    <div class="Product__InfoWrapper">
      <div class="Product__Info {% if media_count == 0 %}Product__Info--noGallery{% endif %}">
        <div class="Container">
          {%- assign description_length = product.description | size -%}
          {%- if section.settings.custom_title -%}
            {%- render 'product-meta', product: product, show_description: true, show_like_badge: false, show_price: false, custom_title: section.settings.custom_title -%}
          {%-else-%}
            {%- render 'product-meta', product: product, show_description: true, show_like_badge: false, show_price: false -%}
          {%-endif-%}

          {%- if product.template_suffix != 'coming-soon' -%}
            {%- render 'product-form', product: product, show_shipping: false, show_benefits: false -%}
          {%- endif -%}

          {%- if section.settings.stack_images and product_aside != blank and media_count > 0 -%}
            <div class="Product__QuickNav hidden-pocket">
              <div class="Product__QuickNavWrapper">
                <a href="#ProductAside" class="Heading Link Link--secondary u-h7">{{ 'product.form.view_info' | t }} {% render 'icon' with 'select-arrow-right' %}</a>
                <a href="#ProductGallery" class="Heading Link Link--secondary u-h7">{{ 'product.form.view_images' | t }} {% render 'icon' with 'select-arrow-right' %}</a>
              </div>
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>

    {%- if product_aside != blank -%}
      <div class="Product__Aside">
        <span id="ProductAside" class="Anchor"></span>
        {{- product_aside -}}
      </div>
    {%- endif -%}
  </div>
</section>

{%- comment -%}
--------------------------------------------------------------------------------------------------------------------
FEATURED IMAGE

We allow merchants to use one image as a "featured image" by adding the alt tag "featured"
--------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

{%- for media in product.media -%}
  {%- if media.alt == 'featured' -%}
    {%- assign desk_featured_media = media.preview_image -%}
  {%- endif -%}

  {%- if media.alt == 'featured mobile' -%}
    {%- assign mobile_featured_media = media.preview_image -%}
  {%- endif -%}
{%- endfor -%}

{%- if desk_featured_media or mobile_featured_media -%}
  {%- assign mobile_featured_media = mobile_featured_media | default: desk_featured_media -%}
  {%- assign desk_featured_media = desk_featured_media | default: mobile_featured_media -%}

  <div class="Product__FeatureImageWrapper" style="background: url({{ desk_featured_media | img_url: '1x1', format: 'jpg' }})">
    <div class="Product__FeatureImage Product__FeatureImage--{{ section.settings.featured_image_size }} Image--lazyLoad Image--zoomOut hide-no-js" data-expand="-25" data-bgset="{{ mobile_featured_media | img_url: 'x850' }} [(max-width: 640px)] | {{ desk_featured_media | img_url: '1500x' }}"></div>

    <noscript>
      <div class="Product__FeatureImage Product__FeatureImage--{{ section.settings.featured_image_size }}" style="background-image: url({{ desk_featured_media | img_url: '1500x' }})"></div>
    </noscript>
  </div>

  <style>
    #shopify-section-{{ section.id }} + .shopify-section--bordered {
      border-top: 0;
    }
  </style>
{%- else -%}
  <style>
    /* This is a bit hacky but allows to circumvent the complete independency of section (as next section included in the page does not know anything about this page) */

    @media screen and (max-width: 640px) {
      #shopify-section-{{ section.id }} + .shopify-section--bordered {
        border-top: 0;
      }
    }
  </style>
{%- endif -%}


<script>
  window.ShopifyXR=window.ShopifyXR||function(){(ShopifyXR.q=ShopifyXR.q||[]).push(arguments)};
  ShopifyXR('addModels', {{ product.media | where: 'media_type', 'model' | json }});
</script>

<script type="text/javascript">
  var _learnq = _learnq || [];

  var item = {
    Name: {{ product.title | json }},
    ProductID: {{ product.id | json }},
    Categories: {{ product.collections | map: 'title' | json }},
    ImageURL: "https:{{ product.featured_image.src | img_url:'grande' }}",
    URL: "{{ shop.secure_url }}{{ product.url }}",
    Brand: {{ product.vendor | json }},
    Price: {{ product.price | money | json }},
    CompareAtPrice: {{ product.compare_at_price_max | money | json }}
  };

  _learnq.push(['track', 'Viewed Product', item]);
  _learnq.push(['trackViewedItem', {
    Title: item.Name,
    ItemId: item.ProductID,
    Categories: item.Categories,
    ImageUrl: item.ImageURL,
    Url: item.URL,
    Metadata: {
      Brand: item.Brand,
      Price: item.Price,
      CompareAtPrice: item.CompareAtPrice
    }
  }]);
</script>

<style>
    .Product__InfoWrapper{
        position: relative;
    }

    .Product__Wrapper{
        margin: 0;
        max-width: unset;
        display: flex;
        justify-content: center;
    }

    .Product__Info{
        position: relative;
        top:0 !important;
        margin: 0;
    }

    .ProductForm__Label{
        display: none;
    }

    .Product__InfoWrapper .Container{
        flex-direction: column;
        display: flex;
        align-items: center;
    }

    .Product__InfoWrapper .Container .SizeSwatchList {
        display: flex;
        justify-content: center;
    }

    .Product__InfoWrapper .Container .SizeSwatchList .HorizontalList__Item label {
      border-radius: 5px;
      border-width: 2px !important;
      padding: 5px 20px;
      font-size: 14pt;
      font-weight: 600;
    }

    .ProductMeta{
      font-size: 14pt;
      line-height: 24px;
    }

    .ProductMeta mark{
      box-shadow: inset 0px -11px 0px 0px #ABCDBE;
      background: transparent;
    }

    .ProductMeta{
        text-align: center;
    }

    .Charity__Header {
      margin-top: 0;
    }

    .Charity__Header .SectionHeader__Heading.Heading{
      font-size: 16pt !important;
    }

    .Charity__Title .Heading, .ProductMeta__Title {
      font-weight: 700 !important;
      font-size: 22pt !important;
    }

    .Charity__Title {
      padding: 10px;
      margin-bottom: 10px;
    }

    .Charity {
      margin: 0;
      max-width: unset;
      margin-bottom: 200px;
      padding: 0;
    }

    .Charity section{
      max-width: 612px;
      margin: auto;
      margin-bottom: -100px;
    }

    .Charity__Wrapper {
      background: #ABCDBE1A;
      padding: 50px 50px 0 50px;
      display: flex;
    }

    .Charity__Wrapper img{
      border-radius: 5px;
    }

    .shopify-section--bordered + .shopify-section--bordered{
      border-top: none;
    }

</style>

{% schema %}
{
  "name": "Product page",
  "class": "shopify-section--bordered",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "label": "Show social sharing buttons",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_taxes_included",
      "label": "Show price taxes notice",
      "default": false
    },
    {
      "type": "select",
      "id": "selector_mode",
      "label": "Selector type",
      "options": [
        {
          "value": "block",
          "label": "Block"
        },
        {
          "value": "dropdown",
          "label": "Dropdown"
        }
      ],
      "default": "dropdown"
    },
    {
      "type": "checkbox",
      "id": "show_color_swatch",
      "label": "Show color swatch",
      "default": false,
      "info": "Some colors appear white? [Learn more](http://support.maestrooo.com/article/80-product-uploading-custom-color-for-color-swatch)."
    },
    {
      "type": "checkbox",
      "id": "show_color_carousel",
      "label": "Show color carousel",
      "info": "A pop-up selector with variant images for choosing colors. Only enables when color swatch is disabled.",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show quantity selector",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_inventory_quantity",
      "label": "Show inventory quantity",
      "info": "Make sure that your inventory is tracked. [Learn more](https://help.shopify.com/manual/products/inventory#set-up-inventory-tracking).",
      "default": false
    },
    {
      "type": "range",
      "id": "inventory_quantity_threshold",
      "label": "Inventory quantity threshold",
      "info": "Only show inventory quantity if below threshold. Choose 0 to always show.",
      "min": 0,
      "max": 50,
      "step": 1,
      "default": 0
    },
    {
      "type": "checkbox",
      "id": "show_price_in_button",
      "label": "Show price in add to cart button",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_payment_button",
      "label": "Show dynamic checkout button",
      "info": "Each customer will see their preferred payment method from those available on your store, such as PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": false
    },
    {
      "type": "text",
      "id": "payment_providers",
      "label": "Payment Provider",
      "info": "Comma separated list"
    },
    {
      "type": "checkbox",
      "id": "show_pickup_availability",
      "label": "Show local pickup availability",
      "info": "Show customers where they can pick up the product. [Learn more](https://help.shopify.com/en/manual/shipping/setting-up-and-managing-your-shipping/local-methods/local-pickup#show-pickup-availability-to-your-customers)",
      "default": false
    },
    {
      "type": "text",
      "id": "custom_title",
      "label": "Custom Product Title"
    },
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "paragraph",
      "content": "Learn more about [media types](https://help.shopify.com/en/manual/products/product-media)"
    },
    {
      "type": "header",
      "content": "Tabs"
    },
    {
      "type": "page",
      "id": "tab_page_1_handle",
      "label": "First page"
    },
    {
      "type": "page",
      "id": "tab_page_2_handle",
      "label": "Second page"
    },
    {
      "type": "paragraph",
      "content": "The theme also allows you to add specific tabs for a given product only. [Learn more about this feature](http://support.maestrooo.com/article/83-product-adding-different-tabs-per-product)."
    },
    {
      "type": "header",
      "content": "Reviews"
    },
    {
      "type": "paragraph",
      "content": "You need to install [Shopify's free Product Reviews](https://apps.shopify.com/product-reviews) app before enabling this option."
    },
    {
      "type": "checkbox",
      "id": "reviews_enabled",
      "label": "Enable",
      "default": false
    },
    {
      "type": "header",
      "content": "Featured image"
    },
    {
      "type": "paragraph",
      "content": "You can highlight an image after product tabs by adding the ALT tag \"featured\" to a given image. [Learn more](http://support.maestrooo.com/article/152-product-highlight-a-featured-image)."
    },
    {
      "type": "select",
      "id": "featured_image_size",
      "label": "Section size",
      "options": [
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "normal",
          "label": "Normal"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "large"
    }
  ]
}
{% endschema %}